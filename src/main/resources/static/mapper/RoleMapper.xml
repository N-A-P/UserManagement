<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mockproject.du1.mapper.RoleMapper">
	<!--Get List All Role Result Map -->
	<resultMap id="GetRoleResultMap"
		type="com.mockproject.du1.model.Role">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Nov 04 
			21:55:34 ICT 2019. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="is_activated" jdbcType="INTEGER"
			property="isActivated" />
		<result column="updated_by" jdbcType="VARCHAR"
			property="updatedBy" />
		<result column="created_timestamp" jdbcType="TIMESTAMP"
			property="createdTimestamp" />
		<result column="updated_timestamp" jdbcType="TIMESTAMP"
			property="updatedTimestamp" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Nov 04 
			21:55:34 ICT 2019. -->
		id, code, name, is_activated, updated_by, created_timestamp,
		updated_timestamp
	</sql>
	<!--Get List All Role Query -->
	<select id="sqlGetAllRoleSelect" resultMap="GetRoleResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM public.role

	</select>

	<!--Get Role By Id Query -->
	<select id="sqlGetRoleByIdSelect" resultMap="GetRoleResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM public.role WHERE role_id = #{roleId}

	</select>

	<!--Get Role By Name Or Code Query -->
	<select id="sqlGetRoleByNameOrCodeSelect"
		resultMap="GetRoleResultMap">
		<bind name="_roleCode" value="'%' + extractCondition + '%'" />
		<bind name="_roleName" value="'%' + extractCondition + '%'" />
		SELECT
		<include refid="Base_Column_List" />
		FROM public.role WHERE role_code ILIKE #{_roleCode}
		OR
		role_name ILIKE
		#{_roleName}

	</select>

	<!--Get Count role: Check duplicate role name -->
	<select id="sqlCountRoleByNameSelect" resultType="Long"
		parameterType="String">

		SELECT
		COUNT(*)
		FROM
		public.role
		WHERE
		public.role.name
		=
		#{name}

	</select>

	<!--Get Count role: Check duplicate role code -->
	<select id="sqlCountRoleByCodeSelect" resultType="Long"
		parameterType="String">

		SELECT
		COUNT(*)
		FROM
		public.role
		WHERE
		public.role.code
		=
		#{code}

	</select>

	<update id="sqlEditRoleInfoUpdate"
		parameterType="com.mockproject.du1.model.Role">

		UPDATE public.role
		SET name =
		#{name},
		code =
		#{code},
		updated_by=#{updatedBy},
		updated_timestamp
		=#{updatedTimestamp}::timestamp without time zone
		WHERE
		id =
		#{id}
	</update>

	<!--Insert role Information -->
	<insert id="sqlRoleInsert"
		parameterType="com.mockproject.du1.model.Role">
		 <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 04 21:55:34 ICT 2019.
    -->
    insert into public.role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="isActivated != null">
        is_activated,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="createdTimestamp != null">
        created_timestamp,
      </if>
      <if test="updatedTimestamp != null">
        updated_timestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isActivated != null">
        #{isActivated,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTimestamp != null">
        #{createdTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTimestamp != null">
        #{updatedTimestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

	<!--Insert new record into Table User_Role -->
	<insert id="sqlCreateRoleDetailInsert" parameterType="Integer">
		INSERT INTO
		public.role_detail
		(role_id,user_id)
		VALUES
		(#{roleId},#{userId})
	</insert>

</mapper>