<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mockproject.du1.mapper.CampaignMapper">


    <!--Get List Data User Information -->
    <resultMap id="GetCampaignResultMap"
               type="com.mockproject.du1.model.Campaign">
        <result property="campaignId" column="campaign_id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="duration" column="duration"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="updateBy" column="updated_by"/>
        <result property="createTimestamp" column="created_timestamp"/>
        <result property="updateTimestamp" column="updated_timestamp"/>
        <result property="emailTemplateId" column="email_template_id"/>
<!--        <association property="com.mockproject.du1.model.Customer" column="campaign_id" select="com.example.mapper.TelecomMapper.selectByPrimaryKey" />-->
    </resultMap>


    <insert id="sqlCreateCampaignInsert" parameterType="com.mockproject.du1.model.Campaign">
        <selectKey keyProperty="emailTemplateId" resultType="int">
            SELECT currval('"campaign_id_seq"')
        </selectKey>
    INSERT INTO public.campaign
    (title, description, duration, start_date, end_date, updated_by, created_timestamp, updated_timestamp,email_template_id)
    VALUES(#{title}, #{description}, #{duration}, #{startDate}, #{endDate}, #{updateBy}, #{createTimestamp}::timestamp without time zone, #{updateTimestamp}::timestamp without time zone,#{emailTemplateId});
	</insert>

    <select id="sqlGetAllCampain"
            resultMap="GetCampaignResultMap" >
		SELECT DISTINCT campaign_id,
		 title,
		 description,
		 duration,
		 start_date,
		 end_date,
		 updated_by,
		 created_timestamp,
		 updated_timestamp,
		 email_template_id
        FROM public.campaign;
	</select>
    <update id="sqlGetCampainById"
            parameterType="com.mockproject.du1.model.Campaign">

		UPDATE public.campaign
        SET
        email_template_id=#{emailTemplateId}
        WHERE campaign_id=#{campaignId};

	</update>

    <update id="sqlCampaignInfoUpdate"
            parameterType="com.mockproject.du1.model.Campaign">

		UPDATE public.campaign
        SET title=#{title},
        description=#{description},
        duration=#{duration},
        start_date=#{startDate},
        end_date=#{endDate},
        updated_by=#{updateBy},
        created_timestamp=#{createTimestamp}::timestamp without time zone,
        updated_timestamp=#{updateTimestamp}::timestamp without time zone,
        email_template_id=#{emailTemplateId}
        WHERE campaign_id=#{campaignId};

	</update>


</mapper>